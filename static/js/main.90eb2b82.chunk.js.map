{"version":3,"sources":["images/crying.png","images/dashing.png","images/fear.png","images/laugh.png","images/love.png","images/sad.png","images/sleeping.png","images/tongue-out.png","images/wink.png","images/unamused.png","App.js","reportWebVitals.js","index.js"],"names":["itemArray","title","isSelected","shuffle","sort","Math","random","getItem","item","crying","sad","wink","dashing","fear","laugh","love","sleeping","tongue","unamused","App","useState","start","setStart","firstItem","setFirstItem","secondItem","setSecondItem","winner","setWinner","useEffect","console","log","setTimeout","every","reloadGame","forEach","Container","className","Row","Col","md","Button","block","onClick","color","style","margin","map","index","Card","handleToggle","CardBody","alt","src","length","width","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90eb2b82.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/crying.33f7c487.png\";","export default __webpack_public_path__ + \"static/media/dashing.479ebf4b.png\";","export default __webpack_public_path__ + \"static/media/fear.3c470431.png\";","export default __webpack_public_path__ + \"static/media/laugh.9d7d70d5.png\";","export default __webpack_public_path__ + \"static/media/love.53124bf6.png\";","export default __webpack_public_path__ + \"static/media/sad.44a6fbe5.png\";","export default __webpack_public_path__ + \"static/media/sleeping.78625f91.png\";","export default __webpack_public_path__ + \"static/media/tongue-out.b6458bad.png\";","export default __webpack_public_path__ + \"static/media/wink.94c0cf65.png\";","export default __webpack_public_path__ + \"static/media/unamused.256c23f3.png\";","import { Container, Row, Button, Col, Card, CardBody } from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./App.css\";\r\nimport { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  AiOutlineArrowLeft,\r\n  AiFillPlayCircle,\r\n  AiOutlineReload,\r\n} from \"react-icons/ai\";\r\nimport { FaQuestionCircle } from \"react-icons/fa\";\r\nimport crying from \"./images/crying.png\";\r\nimport dashing from \"./images/dashing.png\";\r\nimport fear from \"./images/fear.png\";\r\nimport laugh from \"./images/laugh.png\";\r\nimport love from \"./images/love.png\";\r\nimport sad from \"./images/sad.png\";\r\nimport sleeping from \"./images/sleeping.png\";\r\nimport tongue from \"./images/tongue-out.png\";\r\nimport wink from \"./images/wink.png\";\r\nimport unamused from \"./images/unamused.png\";\r\n\r\n// const itemArray = new Array(9).fill(\"empty\");\r\nconst allItems = [\r\n  // \"crying\",\r\n  { title: \"dashing\", isSelected: false },\r\n  { title: \"dashing\", isSelected: false },\r\n  // \"fear\",\r\n  { title: \"laugh\", isSelected: false },\r\n  { title: \"laugh\", isSelected: false },\r\n  // \"unamused\",\r\n  { title: \"love\", isSelected: false },\r\n  { title: \"love\", isSelected: false },\r\n  // \"sad\",\r\n  { title: \"sleeping\", isSelected: false },\r\n  { title: \"sleeping\", isSelected: false },\r\n  // \"tongue\",\r\n  // { title: \"wink\", isSelected: false },\r\n  // { title: \"wink\", isSelected: false },\r\n];\r\n\r\nlet itemArray = [...allItems];\r\n// for (let i = 0; i < 10; i++) {\r\n//   itemArray.push(itemArray[i]);\r\n// }\r\n\r\nconst shuffle = () => {\r\n  itemArray = itemArray.sort(() => Math.random() - 0.5);\r\n};\r\nshuffle();\r\nconst getItem = (item) => {\r\n  switch (item) {\r\n    case \"crying\":\r\n      return crying;\r\n\r\n    case \"sad\":\r\n      return sad;\r\n\r\n    case \"wink\":\r\n      return wink;\r\n\r\n    case \"dashing\":\r\n      return dashing;\r\n\r\n    case \"fear\":\r\n      return fear;\r\n\r\n    case \"laugh\":\r\n      return laugh;\r\n\r\n    case \"love\":\r\n      return love;\r\n\r\n    case \"sleeping\":\r\n      return sleeping;\r\n    case \"tongue\":\r\n      return tongue;\r\n\r\n    case \"unamused\":\r\n      return unamused;\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [start, setStart] = useState(false);\r\n  const [firstItem, setFirstItem] = useState(null);\r\n  const [secondItem, setSecondItem] = useState(null);\r\n  const [winner, setWinner] = useState(false);\r\n  // console.log(itemArray);\r\n\r\n  const handleToggle = (item, index) => {\r\n    if (!itemArray[index].isSelected) {\r\n      itemArray[index].isSelected = true;\r\n      if (firstItem === null) {\r\n        setFirstItem(index);\r\n      } else {\r\n        setSecondItem(index);\r\n        // checkWinner();\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkWinner = () => {\r\n    if (itemArray[firstItem].title === itemArray[secondItem].title) {\r\n      console.log(\"1 point\");\r\n      setFirstItem(null);\r\n      setSecondItem(null);\r\n    } else {\r\n      setTimeout(() => {\r\n        itemArray[firstItem].isSelected = false;\r\n        itemArray[secondItem].isSelected = false;\r\n        setTimeout(() => {\r\n          setFirstItem(null);\r\n          setSecondItem(null);\r\n        }, 500);\r\n      }, 400);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (secondItem) {\r\n      checkWinner();\r\n      if (itemArray.every((item) => item.isSelected === true)) {\r\n        setWinner(true);\r\n      }\r\n    }\r\n  }, [secondItem]);\r\n\r\n  const reloadGame = () => {\r\n    shuffle();\r\n    setWinner(false);\r\n    itemArray.forEach((item) => {\r\n      item.isSelected = false;\r\n    });\r\n  };\r\n  const backToHome = () => {\r\n    reloadGame();\r\n    setStart(false);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"p-2\">\r\n      <h1 className=\"text-center text-white\">Guess What?</h1>\r\n      {winner && (\r\n        <Row>\r\n          <Col md={6} className=\"offset-md-3 \">\r\n            <h1 className=\"text-success text-center text-uppercase\">Winner</h1>\r\n            <Button className=\"mb-2\" block onClick={reloadGame} color=\"info\">\r\n              <AiOutlineReload style={{ margin: \"0 10px\" }} />\r\n              Reload Game\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      {!start ? (\r\n        <Row>\r\n          <Col md={6} className=\"offset-md-3 mt-5\">\r\n            <Button\r\n              block\r\n              color=\"primary\"\r\n              size=\"lg\"\r\n              onClick={() => setStart(true)}\r\n            >\r\n              <AiFillPlayCircle style={{ margin: \"0 10px\" }} />\r\n              Start\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      ) : (\r\n        <Fragment>\r\n          <Row>\r\n            <Col md={6} className=\"offset-md-3\">\r\n              <div className=\"grid\">\r\n                {itemArray.map((item, index) => (\r\n                  <Card key={index} onClick={() => handleToggle(item, index)}>\r\n                    <CardBody className=\"box\">\r\n                      {item.isSelected ? (\r\n                        <img\r\n                          alt={item.title}\r\n                          src={getItem(item.title)}\r\n                          length={\"large\"}\r\n                          width={100}\r\n                        />\r\n                      ) : (\r\n                        <FaQuestionCircle size=\"large\" />\r\n                      )}\r\n                    </CardBody>\r\n                  </Card>\r\n                ))}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6} className=\"offset-md-3 mt-3\">\r\n              <Button block onClick={backToHome} color=\"danger\">\r\n                <AiOutlineArrowLeft style={{ margin: \"0 10px\" }} />\r\n                Back to Home\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Fragment>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}